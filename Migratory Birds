// https://www.hackerrank.com/challenges/migratory-birds/problem

'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'migratoryBirds' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts INTEGER_ARRAY arr as parameter.
 */

function migratoryBirds(arr) {
    // Write your code here
    let sorted = arr.sort();
    let ans = sorted[0];
    let maxOccur = 1,
        counter = 0;
    console.log("sorted : " + sorted);
    console.log("ans : " + ans);
    console.log("sorted.length : " + sorted.length);
    
    for (let i = 0; i < sorted.length; i++) {
        
        counter = (sorted[i] === sorted[i-1]) ? counter + 1 : 0;
        
        if (counter > maxOccur) {
            ans = sorted[i];
            maxOccur = counter;
        }
    }
    
    return ans;
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const arrCount = parseInt(readLine().trim(), 10);

    const arr = readLine().replace(/\s+$/g, '').split(' ').map(arrTemp => parseInt(arrTemp, 10));

    const result = migratoryBirds(arr);

    ws.write(result + '\n');

    ws.end();
}

/*

// value : 1 4 4 4 5 3
// sorted : 1,3,4,4,4,5

counter = (sorted[i] === sorted[i-1]) ? counter + 1 : 0;
// (compare) ? true : false;
// 1 === 1
// counter = 0; maxOccur 1; // false;

// 3 === 1 => 0;

// 4 === 3 => 0;

// 4 === 4 => counter : 1;

// 4 === 4 => counter : 2;

if counter 2 > maxOccur 1; 
	=> ans = sorted[i] // 4; => ans => 4;
	=> maxOccur = counter; 2

*/
