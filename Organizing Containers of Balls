// https://www.hackerrank.com/challenges/organizing-containers-of-balls/problem

'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'organizingContainers' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts 2D_INTEGER_ARRAY container as parameter.
 */

function organizingContainers(container) {
    // Write your code here
    let capcityEach = [];
    let typeEach = [];
    
    for(let i=0; i<container.length; i++) {    
        let storecapcity = 0;
        let storetype = 0;
        
        for(let j=0; j<container[i].length; j++) {
            storecapcity = storecapcity + container[i][j]; 
            storetype = storetype + container[j][i];          
        }
        capcityEach.push(storecapcity);
        typeEach.push(storetype)
    }
    console.log("capcityEach : " + capcityEach);
    console.log("typeEach : " + typeEach);
    console.log("#####");
    
    let sorted1 = capcityEach.sort();
    let sorted2 = typeEach.sort();
    console.log("Sorted1 : " + sorted1);
    console.log("Sorted2 : " + sorted2);
    console.log("Sort 1 length : " + sorted1.length);
    
    for (let i = 0; i < sorted1.length; i++) {
        if (sorted1[i] != sorted2[i]) {
            return 'Impossible';
        }
    }
    return 'Possible';
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const q = parseInt(readLine().trim(), 10);

    for (let qItr = 0; qItr < q; qItr++) {
        const n = parseInt(readLine().trim(), 10);

        let container = Array(n);

        for (let i = 0; i < n; i++) {
            container[i] = readLine().replace(/\s+$/g, '').split(' ').map(containerTemp => parseInt(containerTemp, 10));
        }

        const result = organizingContainers(container);

        ws.write(result + '\n');
    }

    ws.end();
}
